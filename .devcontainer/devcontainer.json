{
  "name": "Python3.9",

  "build": {
    "dockerfile": "Dockerfile",
    "context": "..",
    // Update 'VARIANT' to pick a Python version. Rebuild the container
    // if it already exists to update. Available variants: 3, 3.6, 3.7, 3.8
    "args": {
      "VARIANT": "3.9"
    }
  },

  // "remoteEnv": {
  //   "AWS_DEFAULT_PROFILE": "YOUR_AWS_PROFILE"
  // },

  // Set *default* container specific settings.json values on container create.
  "settings": {
      "editor.renderWhitespace": "all",
      "terminal.integrated.profiles.linux": {
      "bash": {
          "path": "/bin/bash"
      }
      },
      "python.defaultInterpreterPath": "/usr/local/bin/python",
      "python.languageServer": "Default",
      "python.linting.enabled": true,
      "python.linting.pylintEnabled": true,
      "python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
      "python.formatting.blackPath": "/usr/local/py-utils/bin/black",
      "python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
      "python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
      "python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
      "python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
      "python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
      "python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
      "python.linting.pylintPath": "/usr/local/py-utils/bin/pylint",
      "python.testing.pytestArgs": [
      "tests"
      ],
      "python.testing.unittestEnabled": false,
      "python.testing.pytestEnabled": true
  },

  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
      "ms-python.python",
      "ms-python.vscode-pylance",
      "formulahendry.auto-rename-tag",
      "christian-kohler.path-intellisense",
      "CoenraadS.bracket-pair-colorizer",
      "streetsidesoftware.code-spell-checker",
      "visualstudioexptteam.vscodeintellicode",
      "alefragnani.bookmarks",
      "sohamkamani.code-eol",
      "ms-azuretools.vscode-docker",
      "editorconfig.editorconfig",
      "esbenp.prettier-vscode",
      "dbaeumer.vscode-eslint",
      "mhutchie.git-graph",
      "eamodio.gitlens",
      "oderwat.indent-rainbow",
      "shd101wyy.markdown-preview-enhanced",
      "ms-vscode-remote.vscode-remote-extensionpack",
      "arjun.swagger-viewer",
      "mosapride.zenkaku",
      "ms-python.python",
      "njpwerner.autodocstring",
      "redhat.vscode-yaml",
      "devAdvice.serverlessconsole"
  ],

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [3000],

  // Use 'postCreateCommand' to run commands after the container is created.
  // "postCreateCommand": "pip install -r requirements-dev.txt",

  // Use 'postStartCommand' to run commands after the container is started.
  // "postStartCommand": "pip install -r requirements-dev.txt",

  // Comment out to connect as root instead.
  "remoteUser": "vscode",

  "features": {
    "docker-from-docker": {
      "version": "latest"
    }
  },

  "mounts": [
      // "source=${localEnv:HOME}${localEnv:USERPROFILE}/.aws,target=/home/vscode/.aws,type=bind,consistency=cached"
      "source=${localEnv:HOME}/.aws,target=/home/vscode/.aws,type=bind,consistency=cached"
  ]
}
